import os
import pandas as pd
import matplotlib.pyplot as plt
import scipy.stats

# Create directory for saving result if does not exist
data_directory="RQ2-Data"
result_directory="RQ2-Result"
if not os.path.exists(result_directory):
    os.makedirs(result_directory)

# Read ulnerabilities density data of all projects from the csv file
vulnerabilities_density_data= pd.read_csv("{}/vulnerabilities_density_data.csv".format(data_directory))


# Generate scatter Plot of vulnerabilities density vs loc
print("###### Generating scatter plot and save it in {}/{} ######".format(result_directory, "LOC_vs_Vulnerabilities_Density"))
plt.scatter(x=vulnerabilities_density_data.loc[:, "loc"], y=vulnerabilities_density_data.loc[:, "vulnerabilities_density"])
plt.xlabel("LOC")
plt.ylabel("Vulnerabilities Density")
plt.title("LOC vs Vulnerabilities Density ")
plt.savefig("{}/{}.png".format(result_directory, "LOC_vs_Vulnerabilities_Density"))
plt.close()


# Calculate the correlation and p-value
correlation_coefficient, p_value=scipy.stats.pearsonr(vulnerabilities_density_data["loc"], vulnerabilities_density_data["vulnerabilities_density"])
correlation_data= pd.DataFrame({"correlation_coefficient":[correlation_coefficient], "p_value":[p_value]})
print("###### Correlation between loc and vulnerabilities density: ######")
print(correlation_coefficient)
print("###### P-value of correlation between loc and vulnerabilities density: ######")
print(p_value)

# Write correlation data in a CSV file
print("###### Writing correlation data in {}/correlation_data.csv  ######".format(result_directory))
correlation_data.to_csv("{}/correlation_data.csv".format(result_directory),index=False)



