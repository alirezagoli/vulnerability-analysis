import mysql.connector
import pandas as pd
import os


# Connect to database
db = mysql.connector.connect(
    host="localhost",
    user="root",
    passwd="root",
    database="vulinoss"
)
cursor = db.cursor()


# Create directory for saving data if does not exist
directory="RQ2-Data"
if not os.path.exists(directory):
    os.makedirs(directory)


# Get prid, and number of vulnerabilities in each version of all projects
query = '''
SELECT 
    vulinoss.vulnerable_cases.prid,
    COUNT(vulinoss.vulnerable_cases.cve) AS number_of_vulnerabilities
FROM
    vulinoss.vulnerable_cases
WHERE
    vulinoss.vulnerable_cases.prid IN (SELECT DISTINCT
            vulinoss.code_metrics.prid
        FROM
            vulinoss.code_metrics
        ORDER BY vulinoss.code_metrics.prid)
GROUP BY vulinoss.vulnerable_cases.prid
ORDER BY vulinoss.vulnerable_cases.prid;
'''

# Execute query and convert the data to dataframe
cursor.execute(query)
result = cursor.fetchall()
vulnerability_data = pd.DataFrame(result, columns=cursor.column_names)

# Get prid, and loc in each version of all projects
query = '''
SELECT
    vulinoss.code_metrics.prid,
    SUM(vulinoss.code_metrics.loc) AS loc
FROM
    vulinoss.code_metrics
GROUP BY vulinoss.code_metrics.prid
order by vulinoss.code_metrics.prid;
'''

# Execute query and convert the data to dataframe
cursor.execute(query)
result = cursor.fetchall()
code_data = pd.DataFrame(result, columns=cursor.column_names)
code_data["loc"]= code_data["loc"].astype('int64')

# Calculate vulnerabilities density in each version of all projects
code_data["vulnerabilities_density"] = (vulnerability_data["number_of_vulnerabilities"] / code_data["loc"])*1000

# Write data to a CSV file
print("###### Writing vulnerabilities density data of all projects in {}/vulnerabilities_density_data.csv ######".format(directory))
code_data.to_csv("{}/vulnerabilities_density_data.csv".format(directory),index=False)

